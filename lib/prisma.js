// Happy-Tour-main/lib/prisma.js
// Этот файл инициализирует и экспортирует Prisma Client.
// Он использует шаблон Singleton для обеспечения того, чтобы только один экземпляр PrismaClient
// создавался во всем приложении, что критически важно в режиме разработки с HMR
// и является надежной практикой для управления подключениями к базе данных в production.

import { PrismaClient } from '@prisma/client';

// Объявляем переменную для хранения экземпляра PrismaClient
let prisma;

// Убедимся, что PrismaClient инициализируется только один раз
if (process.env.NODE_ENV === 'production') {
  // В режиме продакшена создаем новую инстанцию PrismaClient.
  // Это поведение по умолчанию, когда нет HMR.
  prisma = new PrismaClient();
  console.log('*** PrismaClient успешно инициализирован в РЕЖИМЕ ПРОДАКШЕНА.');
} else {
  // В режиме разработки используем глобальный объект Node.js.
  // Это предотвращает создание множества инстанций PrismaClient при горячей перезагрузке (HMR)
  // в Next.js, что иначе может привести к ошибкам "уже подключено к базе данных".
  if (!global.prisma) {
    global.prisma = new PrismaClient();
    console.log('*** PrismaClient успешно инициализирован в РЕЖИМЕ РАЗРАБОТКИ (глобальный инстанс).');
  }
  prisma = global.prisma;
}

// Экспортируем инициализированный экземпляр PrismaClient как экспорт по умолчанию.
// Это самая распространенная практика для Prisma и часто наиболее устойчивая к проблемам сборки.
export default prisma;
