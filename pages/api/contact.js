// pages/api/contact.js
import { validateRecaptcha } from '../../lib/recaptcha';

export default async function handler(req, res) {
    if (req.method !== 'POST') {
        return res.status(405).json({ message: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω' });
    }

    const { name, contact, message, recaptchaToken, tour } = req.body;

    if (!name || !contact) {
        return res.status(400).json({ message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.' });
    }

    const recaptchaResult = await validateRecaptcha(recaptchaToken);
    if (!recaptchaResult.success) {
        return res.status(400).json({ message: recaptchaResult.message });
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const telegramMessage = `*üî• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞! üî•*\n\n` +
                            `*–°–∞–π—Ç:* HappyTour.by\n` +
                            `*–ò–º—è:* ${name}\n` +
                            `*–ö–æ–Ω—Ç–∞–∫—Ç:* \`${contact}\`\n` + // –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –≤ ` –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                            `*–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message || '–ù–µ—Ç'}\n` +
                            `${tour ? `\n---\n*–ó–∞–ø—Ä–æ—Å –ø–æ —Ç—É—Ä—É:* ${tour.title}\n*–¶–µ–Ω–∞:* ${tour.price} ${tour.currency}\n` : ''}`;

    const TELEGRAM_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
    const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;
    const TELEGRAM_TOPIC_ID = process.env.TELEGRAM_TOPIC_ID;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ —Å–ø–æ—Å–æ–± –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    if (!TELEGRAM_TOKEN || !TELEGRAM_CHAT_ID) {
        console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Telegram –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.");
        return res.status(500).json({ message: '–°–µ—Ä–≤–∏—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.' });
    }

    const telegramApiUrl = `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`;

    try {
        const telegramPayload = {
            chat_id: TELEGRAM_CHAT_ID,
            text: telegramMessage,
            parse_mode: 'Markdown',
            ...(TELEGRAM_TOPIC_ID && { message_thread_id: TELEGRAM_TOPIC_ID }),
        };

        const telegramResponse = await fetch(telegramApiUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(telegramPayload),
        });

        if (!telegramResponse.ok) {
            const telegramResult = await telegramResponse.json();
            console.error("Telegram API Error:", telegramResult);
            throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram.');
        }

        return res.status(200).json({ message: '–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞. –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.' });
    } catch (error) {
        console.error("Telegram Error:", error.message);
        return res.status(500).json({ message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã.' });
    }
}
```

–Ø —Å–æ—Ö—Ä–∞–Ω–∏–ª –≤—Å—é —Ç–≤–æ—é –ª–æ–≥–∏–∫—É, –≤–∫–ª—é—á–∞—è –ø—Ä–æ–≤–µ—Ä–∫—É reCAPTCHA –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —Ç–æ–ø–∏–∫ Telegram, –ø—Ä–æ—Å—Ç–æ –∏–∑–º–µ–Ω–∏–ª —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è. –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å —Ç–æ—á–Ω–æ –∑–Ω–∞—Ç—å, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏–ª–µ—Ç–µ–ª –ª